const pickStringChunkRandomly = (anyEvenLengthString, stringChunkLength) => ((({ stringChunkIndex }) => (anyEvenLengthString.slice((stringChunkIndex * stringChunkLength), ((stringChunkIndex * stringChunkLength) + stringChunkLength))))({ stringChunkIndex: utils.randomIntInclusive(0, ((anyEvenLengthString.length / stringChunkLength) - 1)) }));
const characterSetAbcPassvvord = ("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_");
const getAbcPassvvordPrefixString = () => (({ myFriendMomFavoriteNumberCombination, myFriendDadFavoriteNumberCombination }) => myFriendMomFavoriteNumberCombination.split("").reduce((currentResult, currentCharacter, currentCharacterIndex) => (`${currentResult}${characterSetAbcPassvvord[parseInt((`${myFriendMomFavoriteNumberCombination.charAt(currentCharacterIndex)}${myFriendDadFavoriteNumberCombination.charAt(currentCharacterIndex)}`), 10)]}`), ""))({ myFriendMomFavoriteNumberCombination: "005215", myFriendDadFavoriteNumberCombination: "081680" });
// const abcPassvvordSuffixString = ("Bo6Ggn8qJwveMlZ2dw3wRmWmH5odxYXzYDHoGFBaW1JDdSbw94Vqm2Keww-FxfpJiADHoGFBaW1JDdSbw94Vqm2Keww-FxfpJiB");
const abcPassvvordSuffixString = ("DHoGFBaW1JDdSbw94Vqm2Keww-FxfpJiAAswReDophbZgMu3NnkPp6KV27Or1u2rS4C-KzxSLmmZitsCVv2DeueeUxoVwP0raVkAOuDzSlG24RPBn3OKVAyjW3OK_EJhCUbpCgNcg5M2wIVuPjjIK8ZcHNCSGhG9rUgbYBqSFbeQLYKQl80FblMuj682zvpbpPVG_oCJrtmGOeEFAq912lwijvCmKR33SAtC_qoA2g8QdzZpfchYfJt2bFotADZAkB0EjLS8C7oGgEJaPG2ecxEcHD2klMuyIYKpjHbm4Ckr1uIFuY4Ovh4Bj6qoO-BhUnq6VKnlqkCR3-ptjHE-_douJsn8o20oRwkxt-zHStYDXypHUsRcWWBx2UClUV_wrag8TIlNYbScCnRyFyPuJ9WSeu602Q7CE13TsxWVNbw10B5F1X5hBi8vPsmt1itZTpMluUAjytf6hIBNlYH01_9Hc5S1J9vuFmu2nUqBZJNAXxsC39nF_t-bAogVVXR9dLGLiSEDywUt7FgcDd9bnLFkG8tyRgmjttiFRTT0MTtYpkZb8A-xW0xIfYvro-zD0JCLRfJwqs6s2MmKmUBlXb10kwagd6soG9SCxwN_AOVKbkGzHo0AchO5mV1RTkQvvQSqndYg3eM6MQSkIr9oCWtx_CJRcBN9OcuY9XHANYPzN0hK_vVUUCRFCQo-OD_Aj78svAKeFjrV98h2dkQGxUDo07MSotIB3Q4ETlx_7yxVUB2YKU3MySsBbqZt3S_-Kkk1Umk1R-x6NWPADZhoYHHAAVXOGbvAmgOPi7G2dcqjtrSQccUwHj5GsBDNSLCIZfrJ_IwOzUfO_CJjTRGkVtgaZcD0lg0dtSNdKV1Ap8OIySXOGtozrzhnuRoBJJ13IeXcBSsy0-E1ls6YdCnrZkG6tmtIDpJRl5rjY_ntaBs09g7FqPns-9lOPnyLQDVjq2FfXV-IUFw7vnsBymz_eCG91hddS0DtbQCoHa4lC4kW4g4YXTyb8f5ayJct2AoAN3MLI-jD6mS6425sjj9QcBPWykxvsxZYCfRrWtuQjgV2ekSGkmDn_BROYje60T61cBjVT0Svkp9vP9Mn4Vsafhi2agFJcaheDoA5W2MDJs9uknQv6Cn4OZ07K-wtvkoqYwEBP-eVlQhmfD0Ml630CHwWxsv27k14zjfcBHXKzGZEeBhP_m3QQ6vpI0hRODxeeEWl0B4OtGDS9Vds_enWg0Clv206r_bYoRKkuYDuL2gUksesWq33UDNoACL4mdyjQcsS6vkDJ41XTLp-sCzITSfKSHkUS_PpCGhczOIUDBYQkd46PpGDbk2sl0ya-SiyZ_z9a790sCHiMDmvdOicdMICskRep27PyCoGNvjz6wBykyx3g2Vf986Vsd4MZ2zKvNoh7XG5zLEDE7bbnSB-EbLI2wsn3P01uqVgf4UoaqTQBH-wNARAPPDU_Uc79a5eh9V2re-dv5HZYAhpwpmdv6EaxezbGfiBerSOo_MW-VMc8wCdRWsjXcSzRorIYrysYNyFMGOuEcT2X4ECDAG5mJmnmi9EaR5SujP70x8kLKOau4IsC85CEbvLyxHyMsHhEHhFEm5tliJI9i6HYAD6j9p5yfSNIyCZYDXDTorJils96CJvOQCulRCRR1rItvPjkuXv8AmKJapqcT3Nva0BopySRup3TQ-A7gAQCidyXJnUWP_peQiEBdU9wjzrLP3dOdWfiKvow1PjU2QTbHLdUBztZfIH_qcLxRBsjcJN5Q5-7YAlfyLovEARGs7V5MKve8XTreHbE61amTkEX05ulBQBcxfzlYVchESyN1eITak9GKyo0a1lG9K4CUVxxp1vm9vAmxLTjK61HSP78IYcnERAYCab5he1uGb3ps5IpCubYUKL6FZ_2ZkOb8A4x4wZZ0GGtnm-iR9iozrdpE49SwO28rYBT2gLTptMeiPDsLo4199W2SDDRrJ6MILsAnUQX9d7j3_d5wlJF_PvM02eHOMFbDedwDpWNCjMO3l8vHOuRQQMiLRdZo3jWpkaNUCoGxbgo50sQ98aSQxXUwyeZexTwkWYUlIDQIL_K-T2_LkG3HekTMjaabuV90sN51P8AUKmclQT8DJ0v5E7LOm417IHj4ble7tDsAd9MrlMvXO_U2Mfl1C8LF8Lvy8qtxruHQDIrLYRk8P6upEoBmoF6BG3PGKAi1pDdqoBm67QlIFxjuE34SG9Yy45mQizI4zVieUcACXx9RDMoj8hYQWEM2OhVyhPKHuT21y3IAZvqWSX3sYUtycgABvso6sQAkP137i59MDHzhC_rt5PQDwJvpS2-QkfMfogDaHhFdcBo6Ggn8qJwveMlZ2dw3wRmWmH5odxYXzYCg7kGi7TcjlfmIyq_UKxoejX2Lb-M380UAkeDHwQgc22TWxi4-2r9_5yMWVnLQNMXcBJd7mhA4xaW0qPZDpuexEwG_yBYPX-VA0CW8BnWqQ2Cytq6K0mZ9K2nomEc8jwzK-4Dxpca03rBRSddS8HoGPYaP_eQqKRL5PNAAqmyUSbK13EX58WDExY9LN4VXZecI9wB8Dez4WTShYYZJfCQ3zMJYr-Vp9KGFk-fcICPRfO9EWrZeIYtb2Ql2Ku31JHxBC7zORUB_4qRtTbmqHERuJLpTJAWOjkFwx4c2zMoCOUaXqxVzZfCLB5Hqk_1WJZupfo7IoWv4AS8zf_qluTa22Iq4VMgbNWBnOM6O37Kz8AHKI9T7fhK68b2eggUCHlu9eOwsdFUrhgD1AEr-SukVG5QIK999zDaHLPfjekxCKEEDDIMbO-_T-5cklnZU1-nnZAavWox67-dsAV7G1bMr6mjVCRzcR4cVWaYNL5XEcrDGkAHAUCcBOMbIhUmJsIr0ET4bxxJEaaa2cQDJkyIsrI-5oJ5WX3SnEADpiXFrkIBPl5QDwr3cwM3OXuPikB1BqebAWQQyACjZsFGA");
const getAbcPassvvordString = (abcPassvvordSuffixStringListJoinBySpace) => (`${getAbcPassvvordPrefixString()}${pickStringChunkRandomly(abcPassvvordSuffixStringListJoinBySpace, ((({ abcPassvvordSuffixStringLength }) => abcPassvvordSuffixStringLength)({ abcPassvvordSuffixStringLength: 33 })))}`);
const getAbcCalendarEventHolidayIndonesia = async () => {
    try {
        const calendarIdIndonesiaHoliday = encodeURIComponent("id.indonesian#holiday@group.v.calendar.google.com");
        const abcPassvvordCalendar = getAbcPassvvordString(abcPassvvordSuffixString);
        // console.log({ abcPassvvordCalendar });
        const getAbcCalendarEventHolidayIndonesiaUrl = (`https://www.googleapis.com/calendar/v3/calendars/${calendarIdIndonesiaHoliday}/events?key=${abcPassvvordCalendar}&timeMin=${yearString}-01-01T00:00:00Z&timeMax=${yearPlusOneString}-01-01T00:00:00Z&singleEvents=true&orderBy=startTime`);
        const getAbcCalendarEventHolidayIndonesiaResponse = await utils.fetchThrowErrorIfNotOk(getAbcCalendarEventHolidayIndonesiaUrl);
        const getAbcCalendarEventHolidayIndonesiaResult = await getAbcCalendarEventHolidayIndonesiaResponse.json();
        // console.log({ getAbcCalendarEventHolidayIndonesiaResult });
        return (getAbcCalendarEventHolidayIndonesiaResult?.["items"] || null);
    } catch (anyError) {
        // console.log({ "getAbcCalendarEventHolidayIndonesia.anyError": anyError });
        return null;
    }
};
const utilsAbc = {
    pickStringChunkRandomly,
    characterSetAbcPassvvord,
    getAbcPassvvordPrefixString,
    getAbcPassvvordString,
    getAbcCalendarEventHolidayIndonesia,
};
